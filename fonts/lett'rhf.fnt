nff
% Font fuer lett'rhf-Notation: b=` / #=ï  C D E F G A H c

% norm: nothing :)
	/norm
	{
	} def
% sharp:
	/sharp
	{
	  gsave
	   1 setlinewidth
	   currentpoint
	   newpath
	   moveto
	   (I) stringwidth pop dup 2 div neg
	   5.5 rmoveto
	   2.5 rlineto
	   stroke
	  grestore
	}def
% flat:
	/flat
	{
	  gsave
	   1 setlinewidth
	   currentpoint
	   newpath
	   moveto
	   (I) stringwidth pop dup 2 div neg
	   8 rmoveto
	   -2.5 rlineto
	   stroke
	  grestore
	}def
% dot:
	/sym_dot
	{
	  currentpoint
	  currentpoint
	   newpath 1 0 360 newpath arc fill
	  moveto
	} def

% Text Symbol drucken
% stack: <string>
	/sym_print
	{
	  dup
	  stringwidth
	  exch 2 div neg % x-Wert
	  exch pop -4  % y-Wert
	  rmoveto
	  show
	} def

	/SymBlank % " "
	{ 3.5 4 rmoveto
	  0 1 rlineto
	  stroke
	} def

	/Syma % "a"
	{
	  (C) norm sym_print
	} def

	/SymA % "A"
	{
	  (C) sharp sym_print
	} def

	/Symaa % "<alt>a"
	{
	  0 -5.75 rmoveto sym_dot 0 5.75 rmoveto
	  (H) norm sym_print
	} def

	/Symb % "b"
	{
	  0 -5.75 rmoveto sym_dot 0 5.75 rmoveto
	  (G) norm sym_print
	} def

	/SymB % "B"
	{
	  0 -5.75 rmoveto sym_dot 0 5.75 rmoveto
	  (G) sharp sym_print
	} def

	/Symab % "<alt>b"
	{
	  0 -5.75 rmoveto sym_dot 0 5.75 rmoveto
	  (G) flat sym_print
	} def

	/Symc % "c"
	{
	  0 -5.75 rmoveto sym_dot 0 5.75 rmoveto
	  (E) norm sym_print
	} def

	/SymC % "C"
	{
	  0 -5.75 rmoveto sym_dot 0 5.75 rmoveto
	  (F) norm sym_print
	} def

	/Symac % "<alt>c"
	{
	  0 -5.75 rmoveto sym_dot 0 5.75 rmoveto
	  (E) flat sym_print
	} def

	/Symd % "d"
	{
	  (E) norm sym_print
	} def

	/SymD % "D"
	{
	  (F) norm sym_print
	} def

	/Symad % "<alt>d"
	{
	  (E) flat sym_print
	} def

	/Syme % "e"
	{
	  (e) norm sym_print
	} def

	/SymE % "E"
	{
	  (f) norm sym_print
	} def

	/Symae % "<alt>e"
	{
	  (e) norm sym_print
	  -4 2 rmoveto flat 4 -2 rmoveto
	} def

	/Symf % "f"
	{
	  (F) norm sym_print
	} def

	/SymF % "F"
	{
	  (F) sharp sym_print
	} def

	/Symaf % "<alt>f"
	{
	  (E) norm sym_print
	} def

	/Symg % "g"
	{
	  (G) norm sym_print
	} def

	/SymG % "G"
	{
	  (G) sharp sym_print
	} def

	/Symag % "<alt>g"
	{
	  (G) flat sym_print
	} def

	/Symh % "h"
	{
	  (A) norm sym_print
	} def

	/SymH % "H"
	{
	  (A) sharp sym_print
	} def

	/Symah % "<alt>h"
	{
	  (A) flat sym_print
	} def

	/Symi % "i"
	{
	  0 5 rmoveto sym_dot 0 -5 rmoveto
	  (c) norm sym_print
	} def

	/SymI % "I"
	{
	  2 -2 rmoveto sharp -2 2 rmoveto
	  -2 5 rmoveto sym_dot 2 -5 rmoveto
	  (c) sym_print
	} def

	/Symai % "<alt>i"
	{
	  (h) norm sym_print
	} def

	/Symj % "j"
	{
	  (H) norm sym_print
	} def

	/SymJ % "J"
	{
	  (c) norm sym_print
	} def

	/Symaj % "<alt>j"
	{
	  (B) norm sym_print
	} def

	/Symk % "k"
	{
	  (W) stringwidth pop neg 0     % macht aber keinen Strich!
	  rmoveto
	  (W) stringwidth pop 0
	  rlineto
	} def

	/SymK % "K"
	{
	} def

	/Symak % "<alt>k"
	{
	  (W) stringwidth pop neg 0
	  rmoveto
	  (W) stringwidth pop 0
	  rlineto
	} def

	/Syml % "l" %         Roll-Zeichen
	{
	  (*) norm sym_print
	} def

	/SymL % "L"
	{
	  (*) norm sym_print
	} def

	/Symal % "<alt>l"
	{
	  0 3 rmoveto
	  (~) norm sym_print
	} def

	/Symm % "m"
	{
	  0 -5.75 rmoveto sym_dot 0 5.75 rmoveto
	  (H) norm sym_print
	} def

	/SymM % "M"
	{
	  (C) norm sym_print
	} def

	/Symam % "<alt>m"
	{
	  0 -5.75 rmoveto sym_dot 0 5.75 rmoveto
	  (B) norm sym_print
	} def

	/Symn % "n"
	{
	  0 -5.75 rmoveto sym_dot 0 5.75 rmoveto
	  (A) norm sym_print
	} def

	/SymN % "N"
	{
	  0 -5.75 rmoveto sym_dot 0 5.75 rmoveto
	  (A) sharp sym_print
	} def

	/Syman % "<alt>n"
	{
	  0 -5.75 rmoveto sym_dot 0 5.75 rmoveto
	  (A) flat sym_print
	} def

	/Symo % "o"
	{
	  -1 5 rmoveto sym_dot 1 -5 rmoveto
	  (d) norm sym_print
	} def

	/SymO % "O"
	{
	  1.5 -0.5 rmoveto sharp -1.5 0.5 rmoveto
	  -2.5 5 rmoveto sym_dot 2.5 -5 rmoveto
	  (d) sym_print

	} def

	/Symao % "<alt>o"
	{
	  -0.5 -0.5 rmoveto flat 0.5 0.5 rmoveto
	  -2.5 4.5 rmoveto sym_dot 2.5 -4.5 rmoveto
	  (d) sym_print
	} def

	/Symp % "p"
	{
	  0 5 rmoveto sym_dot 0 -5 rmoveto
	  (e) norm sym_print
	} def

	/SymP % "P"
	{
	  -1.75 5 rmoveto sym_dot 1.75 -5 rmoveto
	  (f) norm sym_print
	} def

	/Symap % "<alt>p"
	{
	  -2 -2 rmoveto flat 2 2 rmoveto
	  2 5 rmoveto sym_dot -2 -5 rmoveto
	  (e) sym_print
	} def

	/Symq % "q"
	{
	  (c) norm sym_print
	} def

	/SymQ % "Q"
	{
	  (c) norm sym_print
	  -3 2 rmoveto sharp 3 -2 rmoveto
	} def

	/Symaq % "<alt>q"
	{
	  (H) norm sym_print
	} def

	/Symr % "r"
	{
	  (f) norm sym_print
	} def

	/SymR % "R"
	{
	  (f) sharp sym_print
	} def

	/Symar % "<alt>r"
	{
	  (e) norm sym_print
	} def

	/Syms % "s"
	{
	  (D) norm sym_print
	} def

	/SymS % "S"
	{
	  (D) sharp sym_print
	} def

	/Symas % "<alt>s"
	{
	  (D) flat sym_print
	} def

	/Symt % "t"
	{
	  (g) norm sym_print
	} def

	/SymT % "T"
	{
	  (g) norm sym_print
	  -3 2 rmoveto sharp 3 -2 rmoveto
	} def

	/Symat % "<alt>t"
	{
	  (g) norm sym_print
	  -4 2 rmoveto flat 4 -2 rmoveto
	} def

	/Symu % "u"
	{
	  (h) norm sym_print
	} def

	/SymU % "U"
	{
	  0 5 rmoveto sym_dot 0 -5 rmoveto
	  (c) norm sym_print
	} def

	/Symau % "<alt>u"
	{
	  (b) norm sym_print
	} def

	/Symv % "v"
	{
	  0 -5.75 rmoveto sym_dot 0 5.75 rmoveto
	  (F) norm sym_print
	} def

	/SymV % "V"
	{
	  0 -5.75 rmoveto sym_dot 0 5.75 rmoveto
	  (F) sharp sym_print
	} def

	/Symav % "<alt>v"
	{
	  0 -5.75 rmoveto sym_dot 0 5.75 rmoveto
	  (E) norm sym_print
	} def

	/Symw % "w"
	{
	  (d) norm sym_print
	} def

	/SymW % "W"
	{
	  (d) norm sym_print
	  -4 3 rmoveto sharp 4 -3 rmoveto
	} def

	/Symaw % "<alt>w"
	{
	  (d) norm sym_print
	  -5.75 2.75 rmoveto flat 5.75 -2.75 rmoveto
	} def

	/Symx % "x"
	{
	  0 -5.75 rmoveto sym_dot 0 5.75 rmoveto
	  (D) norm sym_print
	} def

	/SymX % "X"
	{
	  0 -5.75 rmoveto sym_dot 0 5.75 rmoveto
	  (D) sharp sym_print
	} def

	/Symax % "<alt>x"
	{
	  0 -5.75 rmoveto sym_dot 0 5.75 rmoveto
	  (D) flat sym_print
	} def

	/Symy % "y"
	{
	  0 -5.75 rmoveto sym_dot 0 5.75 rmoveto
	  (C) norm sym_print
	} def

	/SymY % "Y"
	{
	  0 -5.75 rmoveto sym_dot 0 5.75 rmoveto
	  (C) sharp sym_print
	} def

	/Symay % "<alt>y"
	{
	  -2 -5.75 rmoveto sym_dot 2 5.75 rmoveto
	  2 -5.75 rmoveto sym_dot -2 5.75 rmoveto
	  (H) norm sym_print
	} def

	/Symz % "z"
	{
	  (a) norm sym_print
	} def

	/SymZ % "Z"
	{
	  (a) norm sym_print
	  -3 2 rmoveto sharp 3 -2 rmoveto
	} def

	/Symaz % "<alt>z"
	{
	  (a) norm sym_print
	  -4 2 rmoveto flat 4 -2 rmoveto
	} def

	% *************************************************
